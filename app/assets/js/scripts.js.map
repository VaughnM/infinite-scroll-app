{"version":3,"sources":["_settings.js","displayShots.js","favourite.js","getShots.js","lazyLoad.js","main.js","scroll.js","z-main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.js","sourcesContent":["'use strict';\n\nvar infApp = infApp || {};\n\n(function(){\n\ninfApp.settings = {\n  api: {\n    baseUrl: 'https://api.dribbble.com/v1',\n    access_token: '3402bc128ab90bdc0d1ddab729be14c034154ba0fdca8bd1e0d8f230cac3d82c'\n  }\n};\n\n}());","'use strict';\n\nvar infApp = infApp || {};\n\n(function(){\n\n  // creating a HTML template using a json object\n  function prepTemplate(shot) {\n    var t = \"\";\n    var favourite = infApp.checkIfFavourite(shot.id) ? ' favourite' : '';\n\n    // console.info(shot);\n\n    t += '<figure class=\"shot'+ favourite +'\" id=\"' + shot.id + '\">' +\n            '<figcaption class=\"shot-overlay\">'+\n              '<div class=\"shot-overlay-text\">' +\n                '<h2 class=\"shot-title\">' + shot.title + '</h2>' +\n                '<hr>' +\n                '<p class=\"shot-author\">' + shot.user.name + '</p>' +\n              '</div>' +\n              '<div class=\"shot-overlay-cta\">' +\n                '<button onclick=\"infApp.favouriteShot(' + shot.id + ')\">Favourite</button>' +\n              '</div>' +\n            '</figcaption>' +\n            '<img data-src=\"' + shot.images.teaser + '\" alt=\"' + shot.title + '\">' +\n          '</figure>';\n\n    return t;\n  }\n\n  function prepAllHtml(jsonObj) {\n\n  }\n\n  infApp.prepTemplate = prepTemplate;\n\n}());","'use strict';\n\nvar infApp = infApp || {};\n\n(function(){\n\n  function favouriteShot(shotId) {\n    var storage = window.localStorage;\n    var favourites = storage.getItem('favourites');\n    var newArray = [];\n\n    if (! favourites) {\n      newArray.push(shotId)\n      return storage.setItem('favourites', JSON.stringify(newArray));\n    }\n\n    if (checkIfFavourite(shotId)) {\n      return removeFromFavourites(shotId);\n    }\n\n    newArray = JSON.parse(favourites);\n    newArray.push(shotId);\n    toggleFavouriteCssClass(shotId);\n\n    return storage.setItem('favourites', JSON.stringify(newArray));\n  }\n\n  function checkIfFavourite(shotId) {\n    var storage = window.localStorage;\n    var favourites = storage.getItem('favourites');\n    var favouritesArr;\n    var result = false;\n\n    if (! favourites) { return false; }\n\n    favouritesArr = JSON.parse(favourites);\n\n    favouritesArr.forEach(function(favouriteItem) {\n      if (favouriteItem === shotId) {\n        return result = true;\n      }\n    });\n\n    return result;\n  }\n\n  function removeFromFavourites(shotId) {\n    var storage = window.localStorage;\n    var favourites = storage.getItem('favourites');\n    var newArray = JSON.parse(favourites);\n    var index = newArray.indexOf(shotId);\n\n    console.log(newArray)\n\n    if (index > -1) {\n      newArray.splice(index, 1);\n      toggleFavouriteCssClass(shotId);\n    }\n\n    console.log(newArray)\n\n    return storage.setItem('favourites', JSON.stringify(newArray));\n  }\n\n  function toggleFavouriteCssClass(shotId) {\n    var element = document.getElementById(shotId);\n\n    element.classList.toggle('favourite');\n  }\n\n  infApp.favouriteShot = favouriteShot;\n  infApp.checkIfFavourite = checkIfFavourite;\n\n}());","'use strict';\n\nvar infApp = infApp || {};\n\n(function(){\n\n  function getShots(options, successCallback, failureCallback){\n    var request = new XMLHttpRequest();\n\n    var options = options || {};\n    var endPoint = options.endPoint || '/shots/';\n    var page = options.page || '1';\n    var perPage = options.perPage || '10';\n\n    var requestUrl = infApp.settings.api.baseUrl +\n                      endPoint +\n                      '?page=' +\n                      page +\n                      '&per_page=' +\n                      perPage +\n                      '&access_token=' +\n                      infApp.settings.api.access_token;\n\n\n    request.open('GET', requestUrl , true);\n\n    request.onload = function() {\n      var html = [];\n      var htmlString;\n\n      if (request.status >= 200 && request.status < 400) {\n        infApp.shots = JSON.parse(request.responseText);\n\n        console.debug(infApp.shots);\n\n        infApp.shots.forEach(function(item){\n          html.push(infApp.prepTemplate(item));\n        });\n\n        htmlString = html.join('');\n\n        document.getElementById('shots-container').innerHTML += htmlString;\n\n        infApp.pageCount = (infApp.pageCount += 1) || 1;\n\n\n        if (successCallback && typeof successCallback === 'function') {\n          successCallback();\n        }\n\n      } else {\n        console.error(request.responseText);\n      }\n    };\n\n    request.onerror = function() {\n      // There was a connection error of some sort\n      console.error(\"Something went wrong with API request\");\n      if (errorCallback && typeof errorCallback === 'function') {\n        errorCallback();\n      }\n\n    };\n\n    request.send();\n  };\n\n\n  infApp.getShots = getShots;\n\n}());","'use strict';\n\nvar infApp = infApp || {};\n\n(function(){\n\n  function prepLazyLoading() {\n    window.addEventListener(\"DOMContentLoaded\", lazyLoadImages);\n    window.addEventListener(\"load\", lazyLoadImages);\n    window.addEventListener(\"resize\", lazyLoadImages);\n    window.addEventListener(\"scroll\", lazyLoadImages);\n    lazyLoadImages();\n  }\n\n  function lazyLoadImages() {\n    var images = document.querySelectorAll(\"#shots-container img[data-src]\"),\n        item;\n\n    [].forEach.call(images, function(image, index) {\n      if (isElementInViewport(image)) {\n        console.log('image ' + index + ' loading.. ');\n        image.setAttribute(\"src\",image.getAttribute(\"data-src\"));\n        image.removeAttribute(\"data-src\");\n      }\n    })\n  };\n\n  function isElementInViewport (el) {\n    var rect = el.getBoundingClientRect();\n\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n    );\n  }\n\n  infApp.prepLazyLoading = prepLazyLoading;\n\n\n}());","(function(){\n console.log('I can use es6 magic now!');\n\n  var apiUrl = 'https://api.dribbble.com/v1'\n  var accessToken = \"3402bc128ab90bdc0d1ddab729be14c034154ba0fdca8bd1e0d8f230cac3d82c\";\n\n  var request = new XMLHttpRequest();\n  request.open('GET', apiUrl + '/shots/?access_token=' + accessToken, true);\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n      // Success!\n      var data = JSON.parse(request.responseText);\n          console.log(data);\n    } else {\n      // We reached our target server, but it returned an error\n\n    }\n  };\n\n  request.onerror = function() {\n    // There was a connection error of some sort\n  };\n\n  request.send();\n\n} ());","'use strict';\n\nvar infApp = infApp || {};\n\n(function(){\n  function addMoreShotsOnScroll() {\n    var scrollAdvance = 200;\n    var body = document.body,\n        html = document.documentElement;\n\n    var offset = window.pageYOffset;\n    var iHeight = window.innerHeight;\n    var wHeight = Math.max( body.scrollHeight, body.offsetHeight,\n                       html.clientHeight, html.scrollHeight, html.offsetHeight );\n\n    // console.log('offset: ' + offset +/* ' iHeight: ' + iHeight +\n                // ' = ' + (offset + iHeight) +*/\n                // '\\nheight: ' + wHeight);\n\n    // adding min offset to prevent double loading\n    if (offset + iHeight === wHeight) {\n      console.info('reached the bottom');\n      infApp.getShots({page:infApp.pageCount + 1});\n    }\n\n  };\n\n  window.onscroll = addMoreShotsOnScroll;\n\n  infApp.addMoreShotsOnScroll = addMoreShotsOnScroll;\n}());","'use strict';\n\nvar infApp = infApp || {};\n\n\n(function() {\n  infApp.init = function() {\n    var axajOptions = {\n      page: 1\n    };\n    var successCallback = function() {\n      console.log('successCallback')\n      infApp.prepLazyLoading();\n      infApp.addMoreShotsOnScroll();\n    };\n\n    infApp.getShots(axajOptions, successCallback);\n  };\n\n  if (document.readyState != 'loading'){\n    infApp.init();\n\n  } else {\n    document.addEventListener('DOMContentLoaded', infApp.init());\n\n  }\n}());\n\n"],"sourceRoot":"/source/"}